{
  level: 'error',
  message: 'Error connecting to mongodb:  The `uri` parameter to `openUri()` must be a string, got "undefined". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.',
  stack: 'MongooseError: The `uri` parameter to `openUri()` must be a string, got "undefined". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n' +
    '    at NativeConnection.createClient (C:\\Yasiru_Panduka\\Oxzon_AI\\2025-Jan-6-E-Commerce_Platform_for_Electronics_Selling\\Auth_Branch\\e-commerce-platform\\api\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:225:11)\n' +
    '    at NativeConnection.openUri (C:\\Yasiru_Panduka\\Oxzon_AI\\2025-Jan-6-E-Commerce_Platform_for_Electronics_Selling\\Auth_Branch\\e-commerce-platform\\api\\node_modules\\mongoose\\lib\\connection.js:1016:34)\n' +
    '    at Mongoose.connect (C:\\Yasiru_Panduka\\Oxzon_AI\\2025-Jan-6-E-Commerce_Platform_for_Electronics_Selling\\Auth_Branch\\e-commerce-platform\\api\\node_modules\\mongoose\\lib\\mongoose.js:446:15)\n' +
    '    at connectDB (file:///C:/Yasiru_Panduka/Oxzon_AI/2025-Jan-6-E-Commerce_Platform_for_Electronics_Selling/Auth_Branch/e-commerce-platform/api/src/config/db.config.js:6:20)\n' +
    '    at file:///C:/Yasiru_Panduka/Oxzon_AI/2025-Jan-6-E-Commerce_Platform_for_Electronics_Selling/Auth_Branch/e-commerce-platform/api/src/index.js:17:1\n' +
    '    at ModuleJob.run (node:internal/modules/esm/module_job:218:25)\n' +
    '    at async ModuleLoader.import (node:internal/modules/esm/loader:323:24)\n' +
    '    at async loadESM (node:internal/process/esm_loader:28:7)\n' +
    '    at async handleMainPromise (node:internal/modules/run_main:120:12)',
  timestamp: '2025-01-15T12:19:55.924Z'
}
{
  message: 'Server is running on 3000',
  level: 'info',
  timestamp: '2025-01-15T12:19:55.929Z'
}
{
  level: 'error',
  message: 'Error connecting to mongodb:  The `uri` parameter to `openUri()` must be a string, got "undefined". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.',
  stack: 'MongooseError: The `uri` parameter to `openUri()` must be a string, got "undefined". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n' +
    '    at NativeConnection.createClient (C:\\Yasiru_Panduka\\Oxzon_AI\\2025-Jan-6-E-Commerce_Platform_for_Electronics_Selling\\Auth_Branch\\e-commerce-platform\\api\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:225:11)\n' +
    '    at NativeConnection.openUri (C:\\Yasiru_Panduka\\Oxzon_AI\\2025-Jan-6-E-Commerce_Platform_for_Electronics_Selling\\Auth_Branch\\e-commerce-platform\\api\\node_modules\\mongoose\\lib\\connection.js:1016:34)\n' +
    '    at Mongoose.connect (C:\\Yasiru_Panduka\\Oxzon_AI\\2025-Jan-6-E-Commerce_Platform_for_Electronics_Selling\\Auth_Branch\\e-commerce-platform\\api\\node_modules\\mongoose\\lib\\mongoose.js:446:15)\n' +
    '    at connectDB (file:///C:/Yasiru_Panduka/Oxzon_AI/2025-Jan-6-E-Commerce_Platform_for_Electronics_Selling/Auth_Branch/e-commerce-platform/api/src/config/db.config.js:6:20)\n' +
    '    at file:///C:/Yasiru_Panduka/Oxzon_AI/2025-Jan-6-E-Commerce_Platform_for_Electronics_Selling/Auth_Branch/e-commerce-platform/api/src/index.js:17:1\n' +
    '    at ModuleJob.run (node:internal/modules/esm/module_job:218:25)\n' +
    '    at async ModuleLoader.import (node:internal/modules/esm/loader:323:24)\n' +
    '    at async loadESM (node:internal/process/esm_loader:28:7)\n' +
    '    at async handleMainPromise (node:internal/modules/run_main:120:12)',
  timestamp: '2025-01-15T12:49:22.095Z'
}
{
  message: 'Server is running on 3000',
  level: 'info',
  timestamp: '2025-01-15T12:49:22.101Z'
}
{
  level: 'error',
  message: 'Error connecting to mongodb:  The `uri` parameter to `openUri()` must be a string, got "undefined". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.',
  stack: 'MongooseError: The `uri` parameter to `openUri()` must be a string, got "undefined". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\n' +
    '    at NativeConnection.createClient (C:\\Yasiru_Panduka\\Oxzon_AI\\2025-Jan-6-E-Commerce_Platform_for_Electronics_Selling\\Auth_Branch\\e-commerce-platform\\api\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\connection.js:225:11)\n' +
    '    at NativeConnection.openUri (C:\\Yasiru_Panduka\\Oxzon_AI\\2025-Jan-6-E-Commerce_Platform_for_Electronics_Selling\\Auth_Branch\\e-commerce-platform\\api\\node_modules\\mongoose\\lib\\connection.js:1016:34)\n' +
    '    at Mongoose.connect (C:\\Yasiru_Panduka\\Oxzon_AI\\2025-Jan-6-E-Commerce_Platform_for_Electronics_Selling\\Auth_Branch\\e-commerce-platform\\api\\node_modules\\mongoose\\lib\\mongoose.js:446:15)\n' +
    '    at connectDB (file:///C:/Yasiru_Panduka/Oxzon_AI/2025-Jan-6-E-Commerce_Platform_for_Electronics_Selling/Auth_Branch/e-commerce-platform/api/src/config/db.config.js:6:20)\n' +
    '    at file:///C:/Yasiru_Panduka/Oxzon_AI/2025-Jan-6-E-Commerce_Platform_for_Electronics_Selling/Auth_Branch/e-commerce-platform/api/src/index.js:17:1\n' +
    '    at ModuleJob.run (node:internal/modules/esm/module_job:218:25)\n' +
    '    at async ModuleLoader.import (node:internal/modules/esm/loader:323:24)\n' +
    '    at async loadESM (node:internal/process/esm_loader:28:7)\n' +
    '    at async handleMainPromise (node:internal/modules/run_main:120:12)',
  timestamp: '2025-01-15T12:50:56.337Z'
}
{
  message: 'Server is running on 3000',
  level: 'info',
  timestamp: '2025-01-15T12:50:56.342Z'
}
{
  message: 'Server is running on 3000',
  level: 'info',
  timestamp: '2025-01-15T12:53:18.247Z'
}
{
  message: 'Connected to mongodb',
  level: 'info',
  timestamp: '2025-01-15T12:53:19.257Z'
}
{
  message: 'Server is running on 3000',
  level: 'info',
  timestamp: '2025-01-15T12:55:19.560Z'
}
{
  message: 'Connected to mongodb',
  level: 'info',
  timestamp: '2025-01-15T12:55:20.514Z'
}
{
  message: 'Server is running on 3000',
  level: 'info',
  timestamp: '2025-01-15T12:55:22.439Z'
}
{
  message: 'Connected to mongodb',
  level: 'info',
  timestamp: '2025-01-15T12:55:23.224Z'
}
{
  message: 'Server is running on 3000',
  level: 'info',
  timestamp: '2025-01-15T13:04:38.211Z'
}
{
  message: 'Connected to mongodb',
  level: 'info',
  timestamp: '2025-01-15T13:04:39.126Z'
}
{
  message: 'Server is running on 3000',
  level: 'info',
  timestamp: '2025-01-15T13:04:41.523Z'
}
{
  message: 'Connected to mongodb',
  level: 'info',
  timestamp: '2025-01-15T13:04:42.260Z'
}
{
  message: 'Server is running on 3000',
  level: 'info',
  timestamp: '2025-01-15T13:05:32.412Z'
}
{
  message: 'Connected to mongodb',
  level: 'info',
  timestamp: '2025-01-15T13:05:33.143Z'
}
{
  message: 'Server is running on 3000',
  level: 'info',
  timestamp: '2025-01-15T13:10:10.258Z'
}
{
  message: 'Connected to mongodb',
  level: 'info',
  timestamp: '2025-01-15T13:10:11.643Z'
}
{
  message: 'Server is running on 3000',
  level: 'info',
  timestamp: '2025-01-15T13:12:48.293Z'
}
{
  message: 'Connected to mongodb',
  level: 'info',
  timestamp: '2025-01-15T13:12:49.838Z'
}
{
  message: 'Server is running on 3000',
  level: 'info',
  timestamp: '2025-01-15T13:12:51.784Z'
}
{
  message: 'Connected to mongodb',
  level: 'info',
  timestamp: '2025-01-15T13:12:53.115Z'
}
{
  message: 'Server is running on 3000',
  level: 'info',
  timestamp: '2025-01-15T13:21:12.877Z'
}
{
  message: 'Connected to mongodb',
  level: 'info',
  timestamp: '2025-01-15T13:21:14.676Z'
}
{
  message: 'Server is running on 3000',
  level: 'info',
  timestamp: '2025-01-15T13:24:53.468Z'
}
{
  message: 'Connected to mongodb',
  level: 'info',
  timestamp: '2025-01-15T13:24:54.374Z'
}
{
  message: 'Server is running on 3000',
  level: 'info',
  timestamp: '2025-01-15T13:25:00.286Z'
}
{
  message: 'Connected to mongodb',
  level: 'info',
  timestamp: '2025-01-15T13:25:01.691Z'
}
{
  message: 'Server is running on 3000',
  level: 'info',
  timestamp: '2025-01-15T13:25:06.771Z'
}
{
  message: 'Connected to mongodb',
  level: 'info',
  timestamp: '2025-01-15T13:25:07.546Z'
}
{
  message: 'Server is running on 3000',
  level: 'info',
  timestamp: '2025-01-15T13:25:09.759Z'
}
{
  message: 'Connected to mongodb',
  level: 'info',
  timestamp: '2025-01-15T13:25:10.535Z'
}
{
  message: 'Server is running on 3000',
  level: 'info',
  timestamp: '2025-01-15T13:26:54.458Z'
}
{
  message: 'Connected to mongodb',
  level: 'info',
  timestamp: '2025-01-15T13:26:55.189Z'
}
{
  message: 'Server is running on 3000',
  level: 'info',
  timestamp: '2025-01-15T13:32:29.510Z'
}
{
  message: 'Connected to mongodb',
  level: 'info',
  timestamp: '2025-01-15T13:32:30.450Z'
}
